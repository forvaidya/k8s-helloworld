apiVersion: v1
kind: Namespace
metadata:
  name: mahesh-flask-ns

---
apiVersion: v1
kind: Service
metadata:
  name: mahesh-flask-service
  namespace: mahesh-flask-ns
spec:
  selector:
    app: mahesh-flask
  ports:
  - protocol: "TCP"
    port: 80
    targetPort: 80
  type: LoadBalancer

---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: ingress-mahesh-flask-service
  namespace: mahesh-flask-ns
  annotations:
    # use the shared ingress-nginx
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: www.webapp.com
    http:
      paths:
      - path: /
        backend:
          serviceName: mahesh-flask-service
          servicePort: 80
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mahesh-flask
  namespace: mahesh-flask-ns
spec:
  selector:
    matchLabels:
      app: mahesh-flask
  replicas: 3
  template:
    metadata:
      labels:
        app: mahesh-flask
    spec:
      containers:
      - name: mahesh-flask
        image: mahesh-flask:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 80
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 5
        livenessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 5
        startupProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          failureThreshold: 5
